pipeline {
    agent { label 'production' }
    environment {
        PROJECT_ID = 'jenkins-316214'
        CLUSTER_NAME = 'develop'
        LOCATION = 'us-east1-d'
        CREDENTIALS_ID = 'jenkins-316214'
    }
    stages {
        stage('Checkout code from GitHub Repo') {
              steps{
                  script {
                      git branch: 'develop', credentialsId: 'jenkins', url: 'git@github.com:Devops-Ramdas/microservices-demo.git'
                  }
              }
          }
        stage('Login to Harbor Registry') {
            steps {
                sh 'cat ~/harbor | docker login iaasadmin.in --username msdevuser --password-stdin'
            }
        }
        stage('Build adservice docker image') {
            steps {
                sh 'cd src/adservice && docker build -t adservice:latest . && docker tag adservice:latest iaasadmin.in/microservices_dev/adservice:latest && docker push iaasadmin.in/microservices_dev/adservice:latest'
            }
        }
        stage('Build cartservice docker image') {
            steps {
                sh 'cd src/cartservice/src && docker build -t cartservice:latest . && docker tag cartservice:latest iaasadmin.in/microservices_dev/cartservice:latest && docker push iaasadmin.in/microservices_dev/cartservice:latest'
            }
        }
        stage('Build checkoutservice docker image') {
            steps {
                sh 'cd src/checkoutservice && docker build -t checkoutservice:latest . && docker tag checkoutservice:latest iaasadmin.in/microservices_dev/checkoutservice:latest && docker push iaasadmin.in/microservices_dev/checkoutservice:latest'
            }
        }
        stage('Build emailservice docker image') {
                steps {
                    sh 'cd src/emailservice && docker build -t emailservice:latest . && docker tag emailservice:latest iaasadmin.in/microservices_dev/emailservice:latest && docker push iaasadmin.in/microservices_dev/emailservice:latest'
                }
            }
        stage('Build currencyservice docker image') {
                steps {
                    sh 'cd src/currencyservice && docker build -t currencyservice:latest . && docker tag currencyservice:latest iaasadmin.in/microservices_dev/currencyservice:latest && docker push iaasadmin.in/microservices_dev/currencyservice:latest'
                }
            }
        stage('Build frontend docker image') {
                steps {
                    sh 'cd src/frontend && docker build -t frontend:latest . && docker tag frontend:latest iaasadmin.in/microservices_dev/frontend:latest && docker push iaasadmin.in/microservices_dev/frontend:latest'
                }
            }
        stage('Build loadgenerator docker image') {
                steps {
                    sh 'cd src/loadgenerator && docker build -t loadgenerator:latest . && docker tag loadgenerator:latest iaasadmin.in/microservices_dev/loadgenerator:latest && docker push iaasadmin.in/microservices_dev/loadgenerator:latest'
                }
            }
        stage('Build paymentservice docker image') {
                steps {
                    sh 'cd src/paymentservice && docker build -t paymentservice:latest . && docker tag paymentservice:latest iaasadmin.in/microservices_dev/paymentservice:latest && docker push iaasadmin.in/microservices_dev/paymentservice:latest'
                }
            }
        stage('Build productcatalogservice docker image') {
                steps {
                    sh 'cd src/productcatalogservice && docker build -t productcatalogservice:latest . && docker tag productcatalogservice:latest iaasadmin.in/microservices_dev/productcatalogservice:latest && docker push iaasadmin.in/microservices_dev/productcatalogservice:latest'
                }
            }
        stage('Build recommendationservice docker image') {
                steps {
                    sh 'cd src/recommendationservice && docker build -t recommendationservice:latest . && docker tag recommendationservice:latest iaasadmin.in/microservices_dev/recommendationservice:latest && docker push iaasadmin.in/microservices_dev/recommendationservice:latest'
                }
            }
        stage('Build shippingservice docker image') {
                steps {
                    sh 'cd src/shippingservice && docker build -t shippingservice:latest . && docker tag shippingservice:latest iaasadmin.in/microservices_dev/shippingservice:latest && docker push iaasadmin.in/microservices_dev/shippingservice:latest'
                }
            }
        stage('Deploy to GKE') {
            steps{
                sh 'cd kubernetes-manifests && kubectl apply -f .'
            }
        }
    }
}
